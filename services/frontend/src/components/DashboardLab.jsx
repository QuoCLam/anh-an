import React, { useState } from "react";
import OrderDetail from "./OrderDetail";

export default function DashboardLab({ orders }) {
  // ƒê∆°n ph√≤ng th√≠ nghi·ªám (step = 2)
  const labOrders = orders.filter(o => o.step === 2);
  const myTasks = labOrders.filter(o => o.status !== "Ho√†n t·∫•t");
  const today = new Date().toISOString().slice(0, 10);
  const lateOrders = labOrders.filter(o => o.deliveryDate < today && o.status !== "Ho√†n t·∫•t");
  const last10Orders = labOrders.sort((a, b) => b.id - a.id).slice(0, 10);
  const [selected, setSelected] = useState(null);

  return (
    <div className="p-8 bg-gray-100 min-h-screen">
      <div className="text-3xl font-bold mb-4">Dashboard ph√≤ng Th√≠ Nghi·ªám</div>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
        <div className="bg-white rounded-2xl shadow-md p-4 flex items-center gap-4">
          <div className="text-3xl">üß™</div>
          <div>
            <div className="text-gray-500 text-sm">ƒê∆°n ph√≤ng Th√≠ Nghi·ªám</div>
            <div className="text-2xl font-bold">{labOrders.length}</div>
          </div>
        </div>
        <div className="bg-white rounded-2xl shadow-md p-4 flex items-center gap-4">
          <div className="text-3xl">‚è∞</div>
          <div>
            <div className="text-gray-500 text-sm">ƒê∆°n tr·ªÖ</div>
            <div className="text-2xl font-bold text-red-500">{lateOrders.length}</div>
          </div>
        </div>
        <div className="bg-white rounded-2xl shadow-md p-4 flex items-center gap-4">
          <div className="text-3xl">‚úÖ</div>
          <div>
            <div className="text-gray-500 text-sm">ƒê∆°n ƒë√£ ho√†n t·∫•t</div>
            <div className="text-2xl font-bold">{labOrders.filter(o => o.status === "Ho√†n t·∫•t").length}</div>
          </div>
        </div>
      </div>
      {/* Vi·ªác h√¥m nay */}
      <div className="mb-8">
        <div className="text-xl font-semibold mb-2">Vi·ªác c·ªßa t√¥i h√¥m nay</div>
        <div className="bg-white rounded-2xl shadow p-4">
          <table className="w-full">
            <thead>
              <tr className="text-left text-gray-500">
                <th className="p-2">ƒê∆°n h√†ng</th>
                <th className="p-2">Kh√°ch h√†ng</th>
                <th className="p-2">S·∫£n ph·∫©m</th>
                <th className="p-2">Ng√†y giao</th>
                <th className="p-2">T√°c v·ª•</th>
              </tr>
            </thead>
            <tbody>
              {myTasks.length === 0 && (
                <tr>
                  <td colSpan={5} className="text-gray-400 p-4">
                    Kh√¥ng c√≥ vi·ªác c·∫ßn x√°c nh·∫≠n
                  </td>
                </tr>
              )}
              {myTasks.map((order, i) => (
                <tr key={i} className="border-b">
                  <td className="p-2">SO{1000 + order.id}</td>
                  <td className="p-2">{order.customer}</td>
                  <td className="p-2">{order.product}</td>
                  <td className="p-2">{order.deliveryDate}</td>
                  <td className="p-2">
                    <button
                      className="bg-green-500 px-3 py-1 rounded-xl text-white"
                      onClick={() => {/* X√°c nh·∫≠n ho·∫∑c chuy·ªÉn b∆∞·ªõc */}}
                    >
                      X√°c nh·∫≠n
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
      {/* Th√¥ng b√°o h·ªá th·ªëng */}
      <div className="mb-8">
        <div className="text-xl font-semibold mb-2">Th√¥ng b√°o h·ªá th·ªëng</div>
        <div className="bg-white rounded-2xl shadow p-4 space-y-2">
          {lateOrders.length === 0 ? (
            <div className="text-gray-400">Kh√¥ng c√≥ ƒë∆°n tr·ªÖ</div>
          ) : (
            lateOrders.map((o, i) => (
              <div key={i} className="p-2 rounded bg-red-100 text-red-600">
                ƒê∆°n SO{1000 + o.id} ƒë√£ tr·ªÖ ng√†y giao!
              </div>
            ))
          )}
        </div>
      </div>
      {/* Danh s√°ch 10 ƒë∆°n g·∫ßn nh·∫•t */}
      <div>
        <div className="text-xl font-semibold mb-2">10 ƒë∆°n g·∫ßn nh·∫•t ph√≤ng Th√≠ Nghi·ªám</div>
        <div className="bg-white rounded-2xl shadow p-4">
          <table className="w-full">
            <thead>
              <tr className="text-left text-gray-500">
                <th className="p-2">M√£ ƒë∆°n</th>
                <th className="p-2">Kh√°ch h√†ng</th>
                <th className="p-2">S·∫£n ph·∫©m</th>
                <th className="p-2">Ng√†y giao</th>
                <th className="p-2">Tr·∫°ng th√°i</th>
                <th className="p-2">Chi ti·∫øt</th>
              </tr>
            </thead>
            <tbody>
              {last10Orders.map((o, i) => (
                <tr key={i} className="border-b">
                  <td className="p-2">SO{1000 + o.id}</td>
                  <td className="p-2">{o.customer}</td>
                  <td className="p-2">{o.product}</td>
                  <td className="p-2">{o.deliveryDate}</td>
                  <td className="p-2">{o.status}</td>
                  <td className="p-2">
                    <button
                      className="underline text-blue-500"
                      onClick={() => setSelected(o)}
                    >
                      Xem
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
      {/* Popup chi ti·∫øt ƒë∆°n */}
      {selected && (
        <OrderDetail
          order={selected}
          onClose={() => setSelected(null)}
        />
      )}
    </div>
  );
}
